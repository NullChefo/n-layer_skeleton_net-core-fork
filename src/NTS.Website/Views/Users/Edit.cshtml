@model NTS.ApplicationServices.ViewModels.Users.UserVM

@{
    ViewData["Title"] = "Edit user";
}

<h2>@ViewData["Title"]</h2>

@if (!Model.IsActive)
{
    <hr />
    <div class="alert alert-info">You can not edit an inactive track.</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.Id)

        <fieldset @(!Model.IsActive ? "disabled" : String.Empty)>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.RoleId, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    <select class="form-control" id="RoleId" name="RoleId">
                        @foreach (var role in Model.Roles)
                        {
                            <option id="role-@role.Id" value="@role.Id" @(role.Id == Model.RoleId ? "selected" : string.Empty)>@role.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    <button type="submit" class="btn btn-default">
                        <i class="glyphicon glyphicon-floppy-saved" aria-hidden="true"></i>
                        <span>Save</span>
                    </button>
                </div>
            </div>
        </fieldset>
    </div>
}

<div>
    <a href="/Users/Index">
        <i class="glyphicon glyphicon-chevron-left" aria-hidden="true"></i>
        <span>Users</span>
    </a>
</div>

<environment include="Development">
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
</environment>